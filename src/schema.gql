# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthLoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  phone: String!
  role: [String!]!
}

type DashboardPost {
  createdAt: DateTime!
  description: String!
  id: String!
  logoImage: DashboardPostImage
  logoImageId: String
  title: String!
  updatedAt: DateTime!
}

type DashboardPostImage {
  createdAt: DateTime!
  dashboardPost: DashboardPost
  id: String!
  imageSrc: String!
  name: String!
  type: String!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Group {
  createdAt: DateTime!
  id: String!
  identification: String!
  isGroup: Boolean!
  isPrivate: Boolean!
  type: String!
  updatedAt: DateTime!
  usersIdsList: [String!]!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  login(authLoginInput: AuthLoginInput!): StatusOutput!
  logout: StatusOutput!
  refreshToken: StatusOutput!
  removeUser(id: String!): User!
  updateProfileImage(updateUsersProfileImage: UpdateUsersProfileImage!): StatusOutput!
  updateUsersPassword(updateUsersPassword: UpdateUsersPasswordInput!): StatusOutput!
}

type ProfileImage {
  createdAt: DateTime!
  id: String!
  imageSrc: String!
  name: String!
  type: String!
  updatedAt: DateTime!
  user: User
}

type Query {
  dashboard: DashboardPost!
  findById(id: String!): User!
  getCurrentUser: User!
  user(email: String!): UserWithPassword!
  users: [User!]!
}

type StatusOutput {
  status: Boolean!
}

input UpdateUsersPasswordInput {
  id: String!
  newPassword: String!
  oldPassword: String!
}

input UpdateUsersProfileImage {
  name: String!
  newProfileImage: String!
  type: String!
  usersId: String!
}

type User {
  createdAt: DateTime!
  email: String!
  groupIdsList: [String!]
  groupList: [Group!]
  id: String!
  name: String!
  phone: String!
  preferences: UserPreferences
  preferencesId: String
  profileImage: ProfileImage
  profileImageId: String
  readDashboardPostIds: [String!]!
  roles: [String!]!
  updatedAt: DateTime!
}

type UserPreferences {
  createdAt: DateTime!
  id: String!
  preferredTheme: String!
  updatedAt: DateTime!
  userId: String!
}

type UserWithPassword {
  createdAt: DateTime!
  email: String!
  groupIdsList: [String!]
  groupList: [Group!]
  id: String!
  name: String!
  password: String!
  phone: String!
  preferences: UserPreferences
  preferencesId: String
  profileImage: ProfileImage
  profileImageId: String
  readDashboardPostIds: [String!]!
  roles: [String!]!
  updatedAt: DateTime!
}